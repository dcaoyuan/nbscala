/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2008 Sun Microsystems, Inc.
 */

/*
 * Definition of Scala lexical tokens.
 * 
 * @author Caoyuan Deng
 */
module org.netbeans.modules.scala.core.rats.Xml;

// ----- XML

transient generic XmlElement =
  XmlEmptyElemTag
/ XmlSTag XmlContent* XmlETag
;

transient generic XmlLt = "<";
transient generic XmlGt = ">";
transient generic XmlLtSlash = "</";
transient generic XmlSlashGt = "/>";
transient generic XmlEq = "=";

transient generic XmlEmptyElemTag = XmlLt XmlEmptyTagName XmlAttribute* XmlWs? XmlSlashGt ;

transient generic XmlSTag = XmlLt XmlSTagName XmlAttribute* XmlWs? XmlGt ;
transient generic XmlETag = XmlLtSlash XmlETagName XmlWs? XmlGt ;

transient generic XmlAttribute = XmlWs XmlAttName XmlWs? XmlEq XmlWs? XmlAttValue ;

transient generic XmlContent =
  <XmlCDSect>    XmlCDSect
/ <XmlPI>        XmlPI        
/ <XmlCharData>  XmlCharData
/ <XmlElement>   XmlElement
/ <XmlReference> XmlReference
/ <XmlComment>   XmlComment
;

transient generic XmlEmptyTagName = xmlName;
transient generic XmlSTagName = xmlName;
transient generic XmlETagName = xmlName;
transient generic XmlAttName = xmlName;

transient String xmlName = XmlNameStartChar XmlNameChar* ;
transient String XmlNameStartChar = ':' / [A-Z] / '_' / [a-z] ;
transient String XmlNameChar = XmlNameStartChar / '-' / '.' / [0-9] ;

transient generic XmlAttValue = 
  <XmlAttValue> xmlAttValue;

transient String xmlAttValue = 
  ["] ( ![<&"] _ / XmlReference )* ["]
/ ['] ( ![<&'] _ / XmlReference )* [']
;

transient generic XmlCharData =  xmlCharData ;
transient String xmlCharData =  
  xmlCharDataChar+
;

transient String xmlCharDataChar = !( [<&] / "]]>" ) _ ;

transient generic XmlComment = xmlComment;
transient String xmlComment = 
  "<!--" 
  ( '-' !'-'
  / !'-' xmlChar
  )* 
  "-->"
;

transient String XmlReference = XmlEntityRef / XmlCharRef ;
transient String XmlEntityRef = '&' xmlName ';' ;
transient String XmlCharRef = 
  "&#"  [0-9]+ ';'
/ "&#x" [0-9a-fA-F]+ ';'
;

transient generic XmlCDSect = XmlCDStart XmlCData XmlCDEnd ;
transient generic XmlCDStart = "<![CDATA[" ;
transient generic XmlCDEnd   = "]]>" ;
transient generic XmlCData = xmlCDData ;
String xmlCDData = xmlCDataChar*;
/* @Note: !String can be applied only to single char, for example: 
 *     !"]]>" char, 
 * rather than
 *     !"]]>" ( char+ / char* )
 */
String xmlCDataChar = !( "]]>" ) xmlChar ;

transient String XmlPI= "<?" xmlPITarget xmlPIChar* "?>" ;
String xmlPIChar = !( "?>" ) xmlChar ;

transient String xmlPITarget = !( ( 'X' / 'x' ) ( 'M' / 'm' ) ( 'L' / 'l' ) ) xmlName ;

transient String xmlChar = [\u0001-\uD7FF] / [\uE000-\uFFFD] ;

transient Generic XmlWs = xmlWs ;
transient String xmlWs = ( " " / "\f" / "\t" / "\r\n" / "\r" / "\n")+ ;
