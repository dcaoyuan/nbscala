/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2008 Sun Microsystems, Inc.
 */

/*
 * Definition of Scala lexical tokens.
 * 
 * @author Caoyuan Deng
 */
module org.netbeans.modules.scala.core.rats.LexerScala;

import org.netbeans.modules.scala.core.rats.Character;
import org.netbeans.modules.scala.core.rats.Identifier;
import org.netbeans.modules.scala.core.rats.Keyword;
import org.netbeans.modules.scala.core.rats.Literal;
import org.netbeans.modules.scala.core.rats.Spacing;
import org.netbeans.modules.scala.core.rats.Symbol;
import org.netbeans.modules.scala.core.rats.Xml;

modify org.netbeans.modules.scala.core.rats.Xml;

option flatten;

// ----- Modify XmlContent in Xml.rats
generic XmlContent +=
  <ScalaToken> ScalaToken
/ <XmlCDSect>  ...
;

// ----- Modify XmlAttValue in Xml.rats
generic XmlAttValue +=
  <XmlAttValue> ...
/ <ScalaToken>  ScalaToken
;

// ----- Modify XmlCharData in Xml.rats
generic XmlCharData := xmlCharDataInScala;

/* @Note: If we modify xmlCharDataChar in Xml.rats, we cannot add transient */
transient String xmlCharDataInScala = xmlCharDataCharInScala+;
transient String xmlCharDataCharInScala =
  "{{"
/ "}}"
/ !( [<&] / "]]>" / [{}] ) _ 
;

// ----- public entrance
public generic Token =
  Keyword
/ XmlToken
/ DocComment
/ BlockComment   
/ LineComment           
/ Identifier           
/ Nl                   
/ Ws                  
/ Literal
/ Separator
/ Error
/ EOF
;


generic ScalaToken = 
  &'{' Separator !'{' 
  ( TokenInBrace  
  / !( [{}] / EOF ) Token
  )+ 
  &'}' Separator !'}' 
;

// ----- nested { ... } in ScalaToken
generic TokenInBrace = 
  &'{' Separator 
  ( TokenInBrace
  / ( !( [{}] / EOF ) Token )
  )*
  &'}' Separator
;

// ----- XmlToken

transient generic XmlToken =
  Ws                 XmlElement
/ &'(' Separator Ws? XmlElement Ws? &')' Separator 
/ &'{' Separator Ws? XmlElement Ws? &'}' Separator
;

// ----- Literal

transient generic Literal =
  FloatingPointLiteral
/ IntegerLiteral
/ CharacterLiteral
/ StringLiteral
/ SymbolLiteral
;

